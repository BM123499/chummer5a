<?xml version='1.0' encoding='UTF-8'?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" elementFormDefault="qualified" vc:minVersion="1.1">
  <xs:include schemaLocation="bonuses.xsd" />
  <xs:include schemaLocation="conditions.xsd" />
  <xs:include schemaLocation="commons.xsd" />
  <xs:element name="chummer">
    <xs:complexType>
      <xs:all>
        <xs:element name="grades" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element maxOccurs="unbounded" name="grade">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="id" type="guid" />
                    <xs:element name="name" type="xs:string" />
                    <xs:element name="ess" type="xs:decimal" />
                    <xs:element name="cost" type="xs:decimal" />
                    <xs:element name="devicerating" type="xs:unsignedInt" />
                    <xs:element name="avail" type="xs:string" />
                    <xs:element name="source" type="xs:string" />
                    <xs:element name="page" type="xs:unsignedInt" />
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="categories" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="category" maxOccurs="unbounded" >
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="blackmarket" type="xs:string" use="required" />
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="biowares" minOccurs="0">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="bioware" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:all>
                    <xs:group ref="itemGroup" />

                    <!-- required -->
                    <xs:element name="capacity" type="xs:unsignedByte" />
                    <xs:element name="category" type="xs:string" />
                    <xs:element name="ess" type="Int_Rating" />

                    <!-- optional -->
                    <xs:element ref="bonus" minOccurs="0" />
                    <xs:element ref="forbidden" minOccurs="0" />
                    <xs:element ref="required" minOccurs="0" />

                    <xs:element name="addtoparentess" minOccurs="0"/>
                    <xs:element name="isgeneware" minOccurs="0"/>
                    <xs:element name="requireparent" minOccurs="0"/>
                    <xs:element name="selectside" minOccurs="0"/>

                    <xs:element name="addweapon" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="blocksmounts" type="xs:string" minOccurs="0"/>
                    <xs:element name="forcegrade" type="xs:string" minOccurs="0"/>
                    <xs:element name="limit" type="xs:string" minOccurs="0"/>
                    <xs:element name="notes" type="xs:string" minOccurs="0"/>
                    <xs:element name="rating" type="xs:unsignedByte" minOccurs="0"/>

                    <xs:element name="allowsubsystems" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="category" type="xs:string" maxOccurs="unbounded" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>

                    <xs:element name="allowgear" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="gearcategory" type="xs:string" maxOccurs="unbounded" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>

                    <xs:element name="bannedgrades" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="grade" type="xs:string" maxOccurs="unbounded" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>

                    <xs:element name="pairbonus" minOccurs="0">
                      <xs:complexType>
                        <xs:all>
                          <xs:element name="unarmeddv" type="xs:unsignedByte" minOccurs="0" />
                          <xs:element name="unarmedreach" type="xs:unsignedByte" minOccurs="0" />

                          <xs:element name="reach" minOccurs="0" >
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:unsignedByte">
                                  <xs:attribute name="name" type="xs:string" use="required" />
                                </xs:extension>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>

                          <xs:element name="walkmultiplier" minOccurs="0" >
                            <xs:complexType>
                              <xs:sequence>
                                <xs:element name="val" type="xs:unsignedByte" />
                                <xs:element name="category" type="xs:string" />
                              </xs:sequence>
                            </xs:complexType>
                          </xs:element>
                        </xs:all>
                      </xs:complexType>
                    </xs:element>
                    
                    <xs:element name="pairinclude" minOccurs="0">
                      <xs:complexType>
                        <xs:sequence>
                          <xs:element name="name" type="xs:string" maxOccurs="unbounded" />
                        </xs:sequence>
                      </xs:complexType>
                    </xs:element>
                  </xs:all>

                  <!-- ordering -->
                  <xs:assert test="*[1][self::id] and *[2][self::name]"/>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:all>
    </xs:complexType>
  </xs:element>
</xs:schema>